{"version":3,"sources":["img/skill.svg","img/plus.svg","img/book.svg","img/settings.svg","auth.js","pages/Write.js","pages/Journal.js","App.js","index.js"],"names":["poolDetails","authDetails","Pool","AmazonCognitoIdentity","UserPoolId","ClientId","cognitoUser","accessToken","retrieveAccessToken","Promise","resolve","reject","getSession","e","session","getAccessToken","getJwtToken","RefreshToken","getRefreshToken","getToken","console","log","register","phoneNumber","password","a","attributePhoneNumber","Name","Value","customAttributeId","id","attributeList","signUp","err","result","user","then","s","entries","get","fetch","method","headers","Headers","body","JSON","stringify","months","days","printDate","d","Date","getDay","getMonth","getDate","getTime","getHours","getMinutes","slice","Write","display","useState","start","setStart","qaRef","useRef","complete","questions","Array","from","current","querySelectorAll","map","el","innerText","answers","end","post","style","ref","className","contentEditable","onClick","dateShortHand","getFullYear","toString","findIndex","indexedArr","key","value","meta","found","filter","length","list","index","push","EntryHeader","date","isOpen","open","close","EntryContents","entry","q","i","Journal","indexed","setIndexed","setOpen","getEntries","api","req","json","arr","Object","assign","dict","reduce","acc","val","alert","useEffect","indexOf","attributions","titles","write","journal","settings","skills","App","install","swStatus","page","setPage","loggedIn","setLoggedIn","login_fn","getCurrentUser","numRef","pwdRef","alt","width","height","src","NavSkills","NavPlus","NavBook","NavSettings","keys","k","type","Username","Password","passwd","raw","replaceAll","authenticateUser","onSuccess","r","onFailure","localStorage","getItem","navigator","serviceWorker","setItem","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b55569d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/skill.23054f65.svg\";","export default __webpack_public_path__ + \"static/media/plus.a86e5868.svg\";","export default __webpack_public_path__ + \"static/media/book.65cd22a3.svg\";","export default __webpack_public_path__ + \"static/media/settings.d2739024.svg\";","import {v4 as id} from 'uuid';\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\nconst poolDetails = {\n  AppClientId: '2ac3ij97dhtkag9fljdsuo1203',\n  IdentityPool:\t'us-east-1:de5287fc-3a2d-4cad-a685-b9d5bfe936e6',\n  PoolArm: 'arn:aws:cognito-idp:us-east-1:842200175734:userpool/us-east-1_tRcA2uwF6',\n  PoolId:\t'us-east-1_tRcA2uwF6'\n}\n\nlet authDetails = null;\nlet Pool = new AmazonCognitoIdentity.CognitoUserPool ({UserPoolId: poolDetails.PoolId, ClientId: poolDetails.AppClientId});\nlet cognitoUser = null;\nlet accessToken = null;\nlet refreshToken = null;\n\nexport const login = (Username, Password) => new Promise ((resolve, reject) => {\n  try {\n    authDetails = new AmazonCognitoIdentity.AuthenticationDetails ({Username, Password});\n    cognitoUser = new AmazonCognitoIdentity.CognitoUser ({Username, Pool});\n    cognitoUser.authenticateUser (authDetails, {\n      onSuccess: r => resolve (r),\n      onFailure: e => reject (e)\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const getCurrentUser = () => new Promise ((resolve, reject) => {\n  try {\n    if (!Pool) throw 'Must configure user pool before calling login';\n    cognitoUser = Pool.getCurrentUser ();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const retrieveAccessToken = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cognito user must be defined to get access token';\n    cognitoUser.getSession ((e, session) => {\n      if (e) return reject (e);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      console.log ('access token retrieved');\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const refreshSession = () => new Promise ((resolve, reject) => {\n  try {\n    if (!cognitoUser) throw 'Cannot refresh empty cognito user';\n    if (!refreshToken) throw 'Cannot refresh empty refresh token';\n    cognitoUser.refreshSession (refreshToken, (err, session) => {\n      if (err) return reject (err);\n      accessToken = session.getAccessToken ().getJwtToken ();\n      refreshToken = new AmazonCognitoIdentity.CognitoRefreshToken ({RefreshToken: session.getRefreshToken ().getToken ()});\n      resolve ();\n    });\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const signOut = async () => new Promise (async (resolve, reject) => {\n  try {\n    await cognitoUser.signOut();\n    resolve ();\n  } catch (e) {\n    reject (e);\n  }\n});\n\nexport const register = async (phoneNumber, password) => new Promise (async (resolve, reject) => {\n  const attributePhoneNumber = new AmazonCognitoIdentity.CognitoUserAttribute ({Name: 'phone_number', Value: phoneNumber});\n  const customAttributeId = new AmazonCognitoIdentity.CognitoUserAttribute ({Name: 'custom:custom:id', Value: id ()})\n  const attributeList = [attributePhoneNumber, customAttributeId];\n  Pool.signUp (phoneNumber, password, attributeList, null, (err, result) => {\n    if (err) return reject (err);\n    cognitoUser = result.user;\n    retrieveAccessToken ().then (s => resolve ()).err (e => reject (e));\n  })\n});\n\nexport const entries = {\n  get get () {\n    return () => fetch ('https://akqxdqgf7l.execute-api.us-east-1.amazonaws.com/Prod/entries', {\n      method: 'get',\n      headers: new Headers ({\n        'x-amz-access-token': accessToken\n      })\n    });\n  },\n  get post () {\n    return body => fetch ('https://akqxdqgf7l.execute-api.us-east-1.amazonaws.com/Prod/entries', {\n      method: 'post',\n      headers: new Headers ({\n        'x-amz-access-token': accessToken,\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify (body)\n    });\n  }\n}","import { useRef, useState } from \"react\"\nimport { entries } from '../auth'\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\nconst days = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n]\nconst printDate = (d=new Date ()) => {\n  return  `${days [d.getDay ()]}, ${months [d.getMonth ()]} ${d.getDate ()}`\n}\nconst getTime = (d=new Date ()) => {  \n  return `${(d.getHours () % 12 || 12)}:${`0${d.getMinutes ()}`.slice(-2)} ${d.getHours () > 11 ? 'pm' : 'am'}`;\n}\n\nfunction Write ({display}) {\n  const [start, setStart] = useState (new Date ());\n  const qaRef = useRef ();\n  const complete = async () => {\n    let questions = Array.from (qaRef.current.querySelectorAll ('b')).map (el => el.innerText);\n    let answers = Array.from (qaRef.current.querySelectorAll ('div')).map (el => el.innerText);\n    let end = new Date ();\n    await entries.post ({questions, answers, start, end});\n    Array.from (qaRef.current.querySelectorAll ('div')).map (el => el.innerText = '...');\n    setStart (new Date ());\n  }\n  return (\n    <main style={{display}}>\n      <h2>{printDate ()}</h2>\n      <h3>{getTime (start)}</h3>\n      <div ref={qaRef} className=\"questions\">\n        <b>What have I done today?</b>\n        <div contentEditable>...</div>\n        <b>How do I feel?</b>\n        <div contentEditable>...</div>\n        <b>What else am I going to do?</b>\n        <div contentEditable>...</div>\n      </div>\n      <button onClick={complete}>Complete</button>\n    </main>\n  )\n}\n\nexport default Write","import { useEffect, useState } from 'react'\nimport {entries as api} from '../auth'\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\nconst days = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n]\nconst dateShortHand = (d=new Date ()) => {\n  return `${d.getMonth ()}-${d.getDate ()}-${d.getFullYear ()}`.toString ();\n}\nconst printDate = (d=new Date ()) => {\n  return  `${days [d.getDay ()]}, ${months [d.getMonth ()]} ${d.getDate ()}`;\n}\nconst getTime = (d=new Date ()) => {  \n  return `${(d.getHours () % 12 || 12)}:${`0${d.getMinutes ()}`.slice(-2)} ${d.getHours () > 11 ? 'pm' : 'am'}`;\n}\nconst findIndex = (indexedArr=[], key, value, meta={}) => {\n  let found = indexedArr.filter (el => el [key] === value)\n  if (found.length > 0) return found [0].list;\n  let index = {[key]: value, meta, list: []};\n  indexedArr.push (index);\n  return index.list;\n}\n\nconst EntryHeader = ({date, isOpen, open, close}) => {\n  return isOpen ? (\n    <header className=\"entry-header\">\n      <span onClick={close}>x</span>\n      <h2>{date}</h2>\n    </header>\n  ) : (\n    <header className=\"entry-header\">\n      <span onClick={open}>more</span>\n      <h2>{date}</h2>\n    </header>\n  )\n}\n\nconst EntryContents = ({entries, open}) => entries.map (entry => {\n  return open ? (\n    <div key={`entry-${entry.id}`}>\n      {\n        entry.questions.map ((q, i) => (\n          <p>\n            <b>{q} </b>\n            {entry.answers [i]}\n          </p>\n        ))\n      }\n    </div>\n  ) : (<div></div>)\n})\n\n\nfunction Journal({display}) {\n  const [indexed, setIndexed] = useState ([]);\n  const [open, setOpen] = useState ([]);\n  const getEntries = async () => {\n    try {\n      let req = await api.get ();\n      let arr = await req.json ();\n      arr = arr.map (el => Object.assign (el, {start: new Date (el.start), end: new Date (el.end)}));\n      let dict = arr.reduce ((acc, val) => {\n        findIndex (acc, 'date', dateShortHand (val.start), {date: printDate (val.start)}).push (val);\n        return acc;\n      }, []);\n      setIndexed (dict);\n    } catch (e) {\n      alert (e);\n    }\n  }\n  useEffect (() => {\n    getEntries ();\n  }, []);\n\n  return (\n    <main style={{display}}>\n      {indexed.map (index => (\n        <article key={`index-${index.date}`}>\n          <EntryHeader date={index.meta.date} isOpen={open.indexOf (index.date) !== -1} open={() => {setOpen (open => [...open, index.date])}} close={() => {\n            setOpen (open => open.filter (d => d !== index.date))\n          }} index={index} />\n          <EntryContents open={open.indexOf (index.date) !== -1} entries={index.list} />\n        </article>\n      ))}\n    </main>\n  );\n}\n\nexport default Journal\n","import NavSkills from './img/skill.svg'\nimport NavPlus from './img/plus.svg'\nimport NavBook from './img/book.svg'\nimport NavSettings from './img/settings.svg'\nimport './App.css'\nimport { useState, useEffect, useRef } from 'react'\nimport {register, getCurrentUser, login, entries, retrieveAccessToken} from './auth';\nimport Write from './pages/Write'\nimport Journal from './pages/Journal'\n\nconst attributions = {\n  'calendar.svg': '<div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>',\n  'pen.svg': 'Icons made by <a href=\"https://www.flaticon.com/authors/icongeek26\" title=\"Icongeek26\">Icongeek26</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>',\n  'book.svg': 'Icons made by <a href=\"https://www.flaticon.com/authors/zlatko-najdenovski\" title=\"Zlatko Najdenovski\">Zlatko Najdenovski</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>',\n  'plus.svg': 'Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>',\n  'list.svg': 'Icons made by <a href=\"https://www.flaticon.com/authors/phatplus\" title=\"phatplus\">phatplus</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>',\n  'skill.svg': 'Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>',\n  'settings.svg': 'Icons made by <a href=\"https://www.flaticon.com/authors/srip\" title=\"srip\">srip</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>'\n}\n\nconst titles = {\n  write: 'Check In',\n  journal: 'Therapy Journal',\n  settings: 'Customize',\n  skills: 'Coping Skills'\n}\n\nfunction App({install, swStatus}) {\n  const [page, setPage] = useState ('write');\n  const [loggedIn, setLoggedIn] = useState (null);\n  const login_fn = async () => {\n    try {\n      await getCurrentUser ()\n      await retrieveAccessToken ();\n      setLoggedIn (true);\n    } catch (e) {\n      setLoggedIn (false);\n    }\n  }\n\n  useEffect (() => {\n    login_fn ()\n  }, []);\n\n  const numRef = useRef ();\n  const pwdRef = useRef ();\n  const onLogInClick = () => {\n    let passwd = pwdRef.current.value;\n    let raw = numRef.current.value;\n    let phoneNumber = `+1${raw.replaceAll ('-', '')}`;\n    login (phoneNumber, passwd);\n  }\n  const onRegisterClick = () => {\n    let passwd = pwdRef.current.value;\n    let raw = numRef.current.value;\n    let phoneNumber = `+1${raw.replaceAll ('-', '')}`;\n    register (phoneNumber, passwd);\n  }\n  if (!loggedIn) return (\n    <>\n      <header>\n        <h1>Therapy Journal</h1>\n      </header>\n      <main>\n        <h2>can i get ur number?</h2>\n        <div>\n          <input ref={numRef} />\n          <p>(and password)</p>\n          <input type=\"password\" ref={pwdRef} />\n        </div>\n        <div><button onClick={onLogInClick}>Log In</button><button onClick={onRegisterClick}>Register</button></div>\n      </main>\n    </>\n  );\n  return (\n    <>\n    <header>\n      <h1>{titles [page]}</h1>\n      {/* {!swStatus && <button onClick={install}>Install!</button>} */}\n    </header>\n    <Write display={page === 'write' ? 'grid' : 'none'} />\n    <Journal display={page === 'journal' ? 'grid' : 'none'} />\n    <nav>\n      <ul>\n        <li></li>\n        <li className={page === 'calendar' ? 'active' : ''} onClick={() => {setPage ('skills')}}>\n          <img alt=\"\" width=\"32\" height=\"32\" src={NavSkills} />\n          <label>Skills</label>\n        </li>\n        <li className={page === 'write' ? 'active' : ''} onClick={() => {setPage ('write')}}>\n          <img alt=\"\" width=\"32\" height=\"32\" src={NavPlus} />\n          <label>Write</label>\n        </li>\n        <li className={page === 'journal' ? 'active' : ''} onClick={() => {setPage ('journal')}}>\n          <img alt=\"\" width=\"32\" height=\"32\" src={NavBook} />\n          <label>Journal</label>\n        </li>\n        <li className={page === 'settings' ? 'active' : ''} onClick={() => {setPage ('settings')}}>\n          <img alt=\"\" width=\"32\" height=\"32\" src={NavSettings} />\n          <label>Settings</label>\n        </li>\n        <li></li>\n      </ul>\n    </nav>\n    <div id=\"attributions\">\n      <h2>Attributions</h2>\n      <ul>\n        {Object.keys (attributions).map (k => (\n          <li key={`attribiution-${k}`}>{k} - {attributions [k]}</li>\n        ))}\n      </ul>\n    </div>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nconst swStatus = localStorage.getItem ('sw-status');\nconst install = async () => {\n  try {\n    if (swStatus) return;\n    await navigator.serviceWorker.register ('/sw.js');\n    localStorage.setItem ('sw-status', 'installed')\n    alert ('Therapy Journal has installed!');\n    window.location.reload ();\n  } catch (e) {\n    alert (e);\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App install={install} swStatus={swStatus} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}